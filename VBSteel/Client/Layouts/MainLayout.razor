@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationProvider AuthenticationProvider; 


<main>
	<div class="site-container">
		<nav class="navbar navbar-dark navbar-expand-lg menu">
			<div class="container">
				<a class="navbar-brand special-nav-item" href="/">
					<img class="logo" src="images/icon.png" alt="Website Logo">
					VBSteel
				</a>

				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>

				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav me-auto mb-2 mb-lg-0">
						<li class="nav-item">
							<NavLink class="nav-link special-nav-item" href="/tovar">Tovar</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link special-nav-item" href="/o-nas">O Nás</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link special-nav-item" href="/kontakt">Kontakt</NavLink>
						</li>
					</ul>
					<div class="d-flex">
						@if (isUserLoggedIn)
						{
							<NavLink class="btn btn-outline-warning ms-auto" href="/ucet">Účet</NavLink>
							<button class="btn btn-outline-danger ms-2" @onclick="LogOut">Odhlasiť sa</button>
						}
						else
						{
							<NavLink class="btn btn-outline-warning ms-aut" href="/prihlasenie">Prihlásiť sa</NavLink>
							<NavLink class="btn btn-outline-danger ms-2" href="/registracia">Registrovať sa</NavLink>
						}
					</div>
				</div>
			</div>
		</nav>
		@Body
		<footer class="text-center py-3">
			&copy; @DateTime.Now.Year VBSteel. All rights reserved.
		</footer>
	</div>
</main>


@code {
	private bool isUserLoggedIn;
	public string ReturnUrl { get; set; }

	protected override async Task OnParametersSetAsync()
	{
		var authState = await AuthenticationProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		isUserLoggedIn = user.Identity.IsAuthenticated;
	}

	private void SaveReturnUrl()
	{
		ReturnUrl = NavigationManager.Uri;
	}

	private async Task LogOut()
	{
		//todo:token expiration
		await AuthenticationProvider.MarkUserAsLoggedOut();

		isUserLoggedIn = false;
		NavigationManager.NavigateTo("/");
	}

}
