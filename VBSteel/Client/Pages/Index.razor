@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using VBSteel.Shared
@using VBSteel.Client.Pages.Components

<div class="gray-back">
    <div class="container">
        <div class="row py-5">
            <div class="col-12 col-md-5">
                <img src="images/hutnictvo2.jpeg" alt="hutnictvo">
            </div>
            <div class="col-12 col-md-7 mt-3 column-text">
                <h1>Pre všetky vaše hutnícke potreby</h1>
                <p>
                    Vitajte v našom online obchode, kde ponúkame
                    široký výber hutníckych materiálov pre vaše stavebné
                    a priemyselné potreby. S našou dlhoročnou odbornosťou
                    a spoľahlivosťou sme sa stali dôveryhodným partnerom
                    pre zákazníkov z celého sveta.
                </p>

                <p>
                    Naša ponuka zahŕňa rôzne druhy hutníckych materiálov,
                    ktoré sú k dispozícii vo forme rúr, plechov, profilov,
                    drôtov a ďalších foriem. Naši odborníci v oblasti hutníctva
                    vám radi pomôžu vybrať materiál, ktorý najlepšie vyhovuje vašim
                    špecifickým požiadavkám. Ponúkame materiály rôznych typov,
                    ako sú oceľ, hliník, mosadz, medi a ďalšie.
                </p>


            </div>
        </div>
    </div>
</div>
<div class="container text-center">

	@{
		if (_groupedProductViews == null)
		{
			<div>cakaj</div>
		}
		else
		{
			foreach (var group in _groupedProductViews)
			{
				//todo prerobit na komponent
				<div class="row py-5">
					@foreach (var product in group)
					{
						<ProductSmallView Product="@product"/>
					}
				</div>
			}
		}
	}
</div>

@code
{
	private List<ProductViewModel>? _productViews;
	private List<List<ProductViewModel>>? _groupedProductViews;

	protected override async Task OnInitializedAsync()
	{
		var response = await HttpClient.GetAsync("api/Product/productView");
		if (!response.IsSuccessStatusCode)
		{
			Console.WriteLine($"Error: {response.StatusCode}");
			return;
			//todo
		}
		
		_productViews = await response.Content.ReadFromJsonAsync<List<ProductViewModel>>();

		if (_productViews == null)
			NavigationManager.NavigateTo("/404");
		_groupedProductViews = GroupProductViews(_productViews, 3);
		
	}
	
	private List<List<ProductViewModel>> GroupProductViews(List<ProductViewModel> views, int groupSize)
	{
		var groups = new List<List<ProductViewModel>>();
		for (int i = 0; i < views.Count; i += groupSize)
		{
			groups.Add(views.GetRange(i, Math.Min(groupSize, views.Count - i)));
		}
		return groups;
	}
}
