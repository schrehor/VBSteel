@page "/contact"
@inject HttpClient HttpClient
@inject AuthenticationProvider AuthenticationProvider
@inject AuthorizedHttpClient AuthorizedHttpClient
@using VBSteel.Shared
@using Microsoft.AspNetCore.Components.Forms

<div class="container pic-back stretch-content-fullscreen">
	
	<div class="row">
		<div class="col-md-6 py-5">
			<EditForm Model="@_contactForm" OnValidSubmit="@HandleSubmit">
				<DataAnnotationsValidator/>
				<div class="mb-3">
					<label for="emailInput" class="form-label">Email:</label>
					<input type="email" class="form-control" id="emailInput" @bind="_contactForm.Email" @onclick="AutoFillEmail"/>
					<ValidationMessage For="@(() => _contactForm.Email)" class="validation-message"/>
				</div>
				<div class="mb-3">
					<label for="textInput" class="form-label">Správa:</label>
					<textarea class="form-control" id="textInput" @bind="_contactForm.Message"></textarea>
					<ValidationMessage For="@(() => _contactForm.Message)" class="validation-message"/>
				</div>
				<button type="submit" class="btn btn-primary">Odoslať</button>
				@if (!string.IsNullOrEmpty(_alertMessage))
                    {
                        <div class="alert @_alertTypeClass mt-3">
                            @_alertMessage
                        </div>
                    }
			</EditForm>
		</div>
		<div class="col-md-6">
			<div class="text-center py-5 bold">
				<h1>Kde nás nájdete</h1>
				<p>Poloha: Univerzitná 8215, 010 26 Žilina</p>
				<p>telefón: +4219123456789</p>
				<p>mail: info@vbsteel.sk</p>
				<p>Otváracie hodiny:</p>
				Pondelok: 7:00–15:00<br>
				Utorok: 7:00–15:00<br>
				Streda: 7:00–15:00<br>
				Štvrtok: 7:00–15:00<br>
				Piatok: 7:00–15:00<br>
				Sobota: zatvorené<br>
				Nedeľa: zatvorené
			</div>
		</div>
	</div>
</div>

@code {
	//TODO: uprava vizualu
	//TODO: ked sa zmeni alert nech sa vytvori novy komponent s novou spravou namiesto prepisu
	
	private bool _isLoggedIn;
	private readonly FormModel _contactForm = new();
	private string _alertMessage = string.Empty;
	private string _alertTypeClass = string.Empty;
	private string _autofilledEmail = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		
		if (user.Identity is {IsAuthenticated: true})
		{
			_isLoggedIn = true;
			_ = SetLoggedUserEmail();
		}
	}

	private async Task SetLoggedUserEmail()
	{
		var responseMessage = await AuthorizedHttpClient.GetAsync("api/User/getUserEmail");
		if (responseMessage.IsSuccessStatusCode)
		{
			_contactForm.Email = await responseMessage.Content.ReadAsStringAsync();
			_ = SetAlertContent("alert-info", "Z účtu sme automaticky doplnili Váš email.", 5);
		}
	}
	
	private async Task HandleSubmit(EditContext editContext)
	{
		HttpResponseMessage response;
		
		if (_isLoggedIn)
			response = await AuthorizedHttpClient.PostAsJsonAsync("api/form/submitForm", _contactForm);
		else
			response = await HttpClient.PostAsJsonAsync("api/form/submitForm", _contactForm);
		

		if (response.IsSuccessStatusCode)
		{
			_ = SetAlertContent("alert-success", "Správa bola úspešne odoslaná!", 5);
			_autofilledEmail = _contactForm.Email;
			_contactForm.Email = string.Empty;
			_contactForm.Message = string.Empty;
		}
		else
		{
			_ = SetAlertContent("alert-danger", "Nepodarilo sa odoslať správu, prosím skúste to znova.");
		}
	}

	private void AutoFillEmail()
	{
		if (_isLoggedIn && !string.IsNullOrEmpty(_autofilledEmail))
		{
			_contactForm.Email = _autofilledEmail;
			_ = SetAlertContent("alert-info", "Z prechádzajúcej správy sme Vám automaticky doplnili Váš email.", 5);
			_autofilledEmail = string.Empty;
		}
	}

	private async Task SetAlertContent(string type, string content, int timeActive = 0)
	{
		_alertTypeClass = type;
		_alertMessage = content;
		StateHasChanged();

		if (timeActive != 0)
		{
			await Task.Delay(timeActive * 1000);
			_alertTypeClass = string.Empty;
			_alertMessage = string.Empty;
		}
		StateHasChanged();
	}
}
