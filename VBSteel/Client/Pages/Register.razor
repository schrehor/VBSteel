@page "/register"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@using VBSteel.Shared

<div class="content">
    @if (isRegistrationSuccessful)
    {
        <div class="alert alert-success" role="alert">
            Registrácia prebehla úspešne.
        </div>
    }
    @if (emailExists)
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    <div class="login-form-container">
        <h3>Registrácia</h3>
        <form class="login-form" @onsubmit="ProcessRegister">
            <div class="form-group">
                <label for="name">Meno</label>
                <input type="text" class="form-control" id="name" @bind="registrationModel.Name"/>
            </div>
            <div class="form-group">
                <label for="surname">Priezvisko</label>
                <input type="text" class="form-control" id="surname" @bind="registrationModel.Surname"/>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" class="form-control" id="email" @bind="registrationModel.Email"/>
            </div>
            <div class="form-group">
                <label for="password">Heslo</label>
                <input type="password" class="form-control" id="password" @bind="registrationModel.Password"/>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Potvrdiť heslo</label>
                <input type="password" class="form-control" id="confirmPassword" @bind="registrationModel.ConfirmPassword"/>
            </div>
            <button type="submit" class="btn btn-outline-secondary my-2">Registrovať</button>
        </form>
    </div>
</div>

@code {
    private RegistrationViewModel registrationModel = new();
    private bool emailExists;
    private string errorMessage;
    private bool isRegistrationSuccessful;
    private string returnUrl = "/"; 

    private async Task ProcessRegister()
    {
        emailExists = await HttpClient.GetFromJsonAsync<bool>($"https://localhost:7280/api/Registration/check-email?email={registrationModel.Email}");

        if (emailExists)
        {
            errorMessage = "Účet s takýmto emailom už existuje.";
        }
        else
        {
            var response = await HttpClient.PostAsJsonAsync("https://localhost:7280/api/Registration/register", registrationModel);
            if (response.IsSuccessStatusCode)
            {
                var token = await response.Content.ReadAsStringAsync();
                await JsRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
                
                isRegistrationSuccessful = true;
                StateHasChanged();
                
                await Task.Delay(2000); // 2 seconds delay
                NavigationManager.NavigateTo(returnUrl);
            }
        }
    }
}
